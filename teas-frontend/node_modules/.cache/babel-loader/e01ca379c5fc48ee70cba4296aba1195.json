{"ast":null,"code":"export const loadTeas = teas => ({\n  type: \"LOAD_TEAS\",\n  teas\n});\nexport const makeTeas = teas => ({\n  type: \"ADD_TEAS\",\n  teas\n}); // function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/teas\").then(resp => resp.json()).then(teas => dispatch({\n      type: 'LOAD_TEAS',\n      payload: teas\n    }));\n  };\n}; //fetching all teas from the database\n\nexport const createTeas = data => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/teas\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(tea => {\n      if (tea.error) {\n        alert(tea.error);\n      } else {} // dispatch({type: 'ADD_TEA', payload: tea })\n\n\n      return tea;\n    });\n  };\n}; //issues with redirect\n\nexport const addReview = (review, teaId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(review)\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'ADD_REVIEW',\n      payload: tea\n    }));\n  };\n};\nexport const deleteReview = (reviewId, teaId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews/${reviewId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'DELETE_REVIEW',\n      payload: tea\n    }));\n  };\n};\nexport const editTea = data => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${data.id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'EDIT_TEA',\n      payload: tea\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/olusolaolagoroye/teas-shop-react/teas-frontend/src/actions/teasFetch.js"],"names":["loadTeas","teas","type","makeTeas","fetchTeas","dispatch","fetch","then","resp","json","payload","createTeas","data","headers","method","body","JSON","stringify","response","tea","error","alert","addReview","review","teaId","deleteReview","reviewId","editTea","id"],"mappings":"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","sourcesContent":["export const loadTeas = teas => ({ type: \"LOAD_TEAS\", teas })\nexport const makeTeas = teas => ({ type: \"ADD_TEAS\", teas })\n\n\n\n// function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n\n    return dispatch => {\n      return fetch(\"http://localhost:3000/api/v1/teas\")\n        .then(resp => resp.json())\n        .then(teas => dispatch({\n           type: 'LOAD_TEAS',\n           payload: teas\n        }))\n    }\n  } //fetching all teas from the database\n\n  export const createTeas = (data) =>{\n\n      return (dispatch ) => {\n          fetch (\"http://localhost:3000/api/v1/teas\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n          })\n          .then(response =>response.json())\n          .then(tea => {\n            if (tea.error){\n              alert(tea.error)\n            }else {\n              \n            }\n            // dispatch({type: 'ADD_TEA', payload: tea })\n                return tea}\n        )\n          \n      }\n  }\n//issues with redirect\nexport const addReview = (review, teaId) =>{\n\n  return (dispatch)=>{\n\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`,{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(review)\n    })\n    .then(response => response.json())\n    .then(tea => dispatch({type: 'ADD_REVIEW', payload: tea})\n       )\n  }\n}\n\n\nexport const deleteReview = (reviewId, teaId) =>{\n\n  return (dispatch)=>{\n\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews/${reviewId}`,{\n      method: 'DELETE',\n      \n    })\n    .then(response => response.json())\n    .then(tea => dispatch({type: 'DELETE_REVIEW', payload: tea}))\n  }\n}\n\nexport const editTea = (data) =>{\n    return (dispatch ) => {\n      fetch (`http://localhost:3000/api/v1/teas/${data.id}`, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'PATCH',\n        body: JSON.stringify(data)\n      })\n      .then(response =>response.json())\n      .then(tea => dispatch({type: 'EDIT_TEA', payload: tea }))\n\n}\n\n}"]},"metadata":{},"sourceType":"module"}