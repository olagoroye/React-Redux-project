{"ast":null,"code":"export const loadTeas = teas => ({\n  type: \"LOAD_TEAS\",\n  teas\n}); // function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/teas\").then(resp => resp.json()).then(teas => dispatch({\n      type: 'LOAD_TEAS',\n      payload: teas\n    }));\n  };\n}; //fetching all teas from the database\n\nexport const createTeas = data => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/teas\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'ADD_TEA',\n      payload: tea\n    }));\n  };\n};\nexport const addReview = (review, teaId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringnify(review)\n    }).then(response => response.json()).then(review => dispatch({\n      type: 'ADD_REVI'\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/olusolaolagoroye/teas-shop-react/teas-frontend/src/actions/teasFetch.js"],"names":["loadTeas","teas","type","fetchTeas","dispatch","fetch","then","resp","json","payload","createTeas","data","headers","method","body","JSON","stringify","response","tea","addReview","review","teaId","stringnify"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAGC,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBD,EAAAA;AAArB,CAAL,CAArB,C,CAIP;;AAEA,OAAO,MAAME,SAAS,GAAG,MAAM;AAE3B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,mCAAD,CAAL,CACJC,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECL,IAAI,IAAIG,QAAQ,CAAC;AACpBF,MAAAA,IAAI,EAAE,WADc;AAEpBO,MAAAA,OAAO,EAAER;AAFW,KAAD,CAFjB,CAAP;AAMD,GAPD;AAQD,CAVI,C,CAUH;;AAEF,OAAO,MAAMS,UAAU,GAAIC,IAAD,IAAS;AAE/B,SAAQP,QAAD,IAAe;AAClBC,IAAAA,KAAK,CAAE,mCAAF,EAAuC;AAC1CO,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OADiC;AAK1CC,MAAAA,MAAM,EAAE,MALkC;AAM1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANoC,KAAvC,CAAL,CAQCL,IARD,CAQMW,QAAQ,IAAGA,QAAQ,CAACT,IAAT,EARjB,EASCF,IATD,CASMY,GAAG,IAAId,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE,SAAP;AAAkBO,MAAAA,OAAO,EAAES;AAA3B,KAAD,CATrB;AAWH,GAZD;AAaH,CAfM;AAiBT,OAAO,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,KAAkB;AACzC,SAAQjB,QAAD,IAAY;AACjBC,IAAAA,KAAK,CAAE,qCAAoCgB,KAAM,UAA5C,EAAsD;AACzDR,MAAAA,MAAM,EAAE,MADiD;AAEzDD,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgD;AAKzDE,MAAAA,IAAI,EAAEC,IAAI,CAACO,UAAL,CAAgBF,MAAhB;AALmD,KAAtD,CAAL,CAOCd,IAPD,CAOMW,QAAQ,IAAIA,QAAQ,CAACT,IAAT,EAPlB,EAQCF,IARD,CAQMc,MAAM,IAAIhB,QAAQ,CAAC;AAACF,MAAAA,IAAI,EAAE;AAAP,KAAD,CARxB;AASD,GAVD;AAWD,CAZM","sourcesContent":["export const loadTeas = teas => ({ type: \"LOAD_TEAS\", teas })\n\n\n\n// function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n\n    return dispatch => {\n      return fetch(\"http://localhost:3000/api/v1/teas\")\n        .then(resp => resp.json())\n        .then(teas => dispatch({\n           type: 'LOAD_TEAS',\n           payload: teas\n        }))\n    }\n  } //fetching all teas from the database\n\n  export const createTeas = (data) =>{\n\n      return (dispatch ) => {\n          fetch (\"http://localhost:3000/api/v1/teas\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n          })\n          .then(response =>response.json())\n          .then(tea => dispatch({type: 'ADD_TEA', payload: tea }))\n\n      }\n  }\n\nexport const addReview = (review, teaId) =>{\n  return (dispatch)=>{\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`,{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringnify(review)\n    })\n    .then(response => response.json())\n    .then(review => dispatch({type: 'ADD_REVI'}))\n  }\n}"]},"metadata":{},"sourceType":"module"}