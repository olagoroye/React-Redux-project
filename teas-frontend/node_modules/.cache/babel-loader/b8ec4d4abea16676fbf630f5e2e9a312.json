{"ast":null,"code":"export const loadTeas = teas => ({\n  type: \"LOAD_TEAS\",\n  teas\n}); // function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/api/v1/teas\").then(resp => resp.json()).then(teas => dispatch({\n      type: 'LOAD_TEAS',\n      payload: teas\n    }));\n  };\n}; //fetching all teas from the database\n\nexport const createTeas = data => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/teas\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(tea => {\n      dispatch({\n        type: 'ADD_TEA',\n        payload: tea\n      });\n      return tea;\n    });\n  };\n}; //issues with redirect\n\nexport const addReview = (review, teaId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(review)\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'ADD_REVIEW',\n      payload: tea\n    }));\n  };\n};\nexport const deleteReview = (reviewId, teaId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews/${reviewId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'DELETE_REVIEW',\n      payload: tea\n    }));\n  };\n};\nexport const editTea = data => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/teas/${data.id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(tea => dispatch({\n      type: 'EDIT_TEA',\n      payload: tea\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/olusolaolagoroye/teas-shop-react/teas-frontend/src/actions/teasFetch.js"],"names":["loadTeas","teas","type","fetchTeas","dispatch","fetch","then","resp","json","payload","createTeas","data","headers","body","JSON","stringify","response","tea","addReview","review","teaId","method","deleteReview","reviewId","editTea","id"],"mappings":"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","sourcesContent":["export const loadTeas = teas => ({ type: \"LOAD_TEAS\", teas })\n\n\n\n// function return an action object which is returned to the reducer to update \n\nexport const fetchTeas = () => {\n\n    return dispatch => {\n      return fetch(\"http://localhost:3000/api/v1/teas\")\n        .then(resp => resp.json())\n        .then(teas => dispatch({\n           type: 'LOAD_TEAS',\n           payload: teas\n        }))\n    }\n  } //fetching all teas from the database\n\n  export const createTeas = (data) =>{\n\n      return (dispatch ) => {\n          fetch (\"http://localhost:3000/api/v1/teas\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n           \n            body: JSON.stringify(data)\n          })\n          .then(response =>response.json())\n          .then(tea => {dispatch({type: 'ADD_TEA', payload: tea })\n                return tea\n        \n        })\n          \n      }\n  }\n//issues with redirect\nexport const addReview = (review, teaId) =>{\n\n  return (dispatch)=>{\n\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews`,{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(review)\n    })\n    .then(response => response.json())\n    .then(tea => dispatch({type: 'ADD_REVIEW', payload: tea})\n       )\n  }\n}\n\n\nexport const deleteReview = (reviewId, teaId) =>{\n\n  return (dispatch)=>{\n\n    fetch(`http://localhost:3000/api/v1/teas/${teaId}/reviews/${reviewId}`,{\n      method: 'DELETE',\n      \n    })\n    .then(response => response.json())\n    .then(tea => dispatch({type: 'DELETE_REVIEW', payload: tea}))\n  }\n}\n\nexport const editTea = (data) =>{\n    return (dispatch ) => {\n      fetch (`http://localhost:3000/api/v1/teas/${data.id}`, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        method: 'PATCH',\n        body: JSON.stringify(data)\n      })\n      .then(response =>response.json())\n      .then(tea => dispatch({type: 'EDIT_TEA', payload: tea }))\n\n}\n\n}"]},"metadata":{},"sourceType":"module"}